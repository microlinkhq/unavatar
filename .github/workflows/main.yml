name: main

on:
  push:
    branches:
      - master

jobs:
  contributors:
    if: "${{ github.event.head_commit.message != 'build: contributors' }}"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: lts/*
      - name: Contributors
        run: |
          git config --global user.email ${{ secrets.GIT_EMAIL }}
          git config --global user.name ${{ secrets.GIT_USERNAME }}
          npm run contributors
      - name: Push changes
        run: |
          git push origin ${{ github.head_ref }}

  release:
    if: |
      !startsWith(github.event.head_commit.message, 'chore(release):') &&
      !startsWith(github.event.head_commit.message, 'docs:') &&
      !startsWith(github.event.head_commit.message, 'ci:')
    needs: [contributors]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: lts/*
      - name: Setup Redis
        uses: supercharge/redis-github-action@1.8.0
      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: true
      - name: Test
        env:
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          REDIS_URI_METERED_BILLING: redis://localhost:6379
        run: npm test
      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          git config --global user.email ${{ secrets.GIT_EMAIL }}
          git config --global user.name ${{ secrets.GIT_USERNAME }}
          git pull origin master
          npm run release
  deploy:
    needs: [release]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy
        run: flyctl deploy --remote-only --detach
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
