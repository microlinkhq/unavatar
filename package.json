{
  "name": "unavatar",
  "description": "Get unified user avatar from social networks, including Instagram, SoundCloud, Telegram, Twitter, YouTube & more.",
  "homepage": "https://unavatar.io",
  "version": "3.7.44",
  "main": "src/index.js",
  "bin": {
    "unavatar": "bin/server"
  },
  "author": {
    "email": "josefrancisco.verdu@gmail.com",
    "name": "Kiko Beats",
    "url": "https://kikobeats.com"
  },
  "contributors": [
    {
      "name": "Ben Croker",
      "email": "57572400+bencroker@users.noreply.github.com"
    },
    {
      "name": "David Refoua",
      "email": "David@Refoua.me"
    },
    {
      "name": "Alexander Schlindwein",
      "email": "alexander.schlindwein@hotmail.de"
    },
    {
      "name": "Zadkiel",
      "email": "hello@zadkiel.fr"
    },
    {
      "name": "Omid Nikrah",
      "email": "omidnikrah@gmail.com"
    },
    {
      "name": "Nicolas Hedger",
      "email": "649677+nhedger@users.noreply.github.com"
    },
    {
      "name": "Angel M De Miguel",
      "email": "angel@bitnami.com"
    },
    {
      "name": "Tom Witkowski",
      "email": "dev.gummibeer@gmail.com"
    },
    {
      "name": "Terence Eden",
      "email": "edent@users.noreply.github.com"
    },
    {
      "name": "Hameed Rahamathullah",
      "email": "hameedraha@gmail.com"
    },
    {
      "name": "Jahir Fiquitiva",
      "email": "jahir.fiquitiva@gmail.com"
    },
    {
      "name": "Mads Hougesen",
      "email": "mads@mhouge.dk"
    },
    {
      "name": "ぶーと / Yoshiaki Ueda",
      "email": "oh@bootjp.me"
    },
    {
      "name": "Reed Jones",
      "email": "reedjones@reedjones.com"
    },
    {
      "name": "Rodrigo Reis",
      "email": "rodrigoreis22@yahoo.com.br"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Kikobeats/unavatar.git"
  },
  "bugs": {
    "url": "https://github.com/Kikobeats/unavatar/issues"
  },
  "keywords": [
    "avatar",
    "clearbit",
    "domain",
    "email",
    "github",
    "gravatar",
    "instagram",
    "microlink",
    "telegram",
    "twitter",
    "youtube"
  ],
  "dependencies": {
    "@keyvhq/compress": "~2.1.7",
    "@keyvhq/core": "~2.1.7",
    "@keyvhq/multi": "~2.1.7",
    "@keyvhq/redis": "~2.1.10",
    "@kikobeats/time-span": "~1.0.8",
    "@microlink/mql": "~0.14.0",
    "@microlink/ping-url": "~1.4.16",
    "@microlink/ua": "~1.2.6",
    "async-memoize-one": "~1.1.9",
    "browserless": "~10.9.0",
    "cacheable-lookup": "~6.1.0",
    "cacheable-response": "~2.10.4",
    "cheerio": "~1.1.2",
    "cors": "~2.8.5",
    "data-uri-regex": "~0.1.4",
    "data-uri-to-buffer": "~5.0.1",
    "debug-logfmt": "~1.4.2",
    "frequency-counter": "~1.0.1",
    "got": "~11.8.6",
    "helmet": "~8.1.0",
    "html-get": "~2.21.10",
    "http-compression": "~1.1.2",
    "https-tls": "~1.0.24",
    "ioredis": "~5.8.0",
    "is-absolute-url": "~3.0.3",
    "is-email-like": "~1.0.0",
    "is-url-http": "~2.3.10",
    "lodash": "~4.17.21",
    "ms": "~2.1.3",
    "null-prototype-object": "~1.2.2",
    "on-finished": "~2.4.1",
    "openkey": "~0.0.19",
    "p-any": "~3.0.0",
    "p-cancelable": "2.1.1",
    "p-reflect": "~2.1.0",
    "p-timeout": "~4.1.0",
    "puppeteer": "~24.18.0",
    "rate-limiter-flexible": "~7.3.0",
    "router-http": "~1.0.11",
    "send-http": "~1.0.6",
    "serve-static": "~2.2.0",
    "srcset": "~4.0.0",
    "stripe": "18",
    "tangerine": "~1.6.0",
    "top-crawler-agents": "~1.0.34",
    "top-user-agents": "~2.1.67",
    "ua-hints": "~1.0.1",
    "unique-random-array": "~2.0.0",
    "url-regex": "~5.0.0"
  },
  "devDependencies": {
    "@commitlint/cli": "latest",
    "@commitlint/config-conventional": "latest",
    "@ksmithut/prettier-standard": "latest",
    "async-listen": "latest",
    "ava": "5",
    "browser-sync": "latest",
    "concurrently": "latest",
    "cssnano": "latest",
    "cssnano-preset-advanced": "latest",
    "finepack": "latest",
    "git-authors-cli": "latest",
    "github-generate-release": "latest",
    "gulp": "5",
    "gulp-autoprefixer": "latest",
    "gulp-concat": "latest",
    "gulp-postcss": "latest",
    "gulp-uglify": "latest",
    "nano-staged": "latest",
    "postcss": "latest",
    "postcss-focus": "latest",
    "simple-git-hooks": "latest",
    "sinon": "latest",
    "standard": "latest",
    "standard-markdown": "latest",
    "standard-version": "latest",
    "untracked": "latest"
  },
  "engines": {
    "node": "22"
  },
  "files": [
    "bin",
    "gulpfile.js",
    "public",
    "src"
  ],
  "scripts": {
    "build": "gulp build && untracked > .vercelignore",
    "clean": "rm -rf node_modules",
    "contributors": "(npx git-authors-cli && npx finepack && git add package.json && git commit -m 'build: contributors' --no-verify) || true",
    "dev": "TZ=UTC watchexec --clear=clear --on-busy-update=restart 'fkill \"Google Chrome for Testing\" --silent && NODE_OPTIONS='--no-deprecation' node src/server.js'",
    "dev:docker": "docker build --platform linux/arm64/v8 -t unavatar . && docker run --platform linux/arm64/v8 --name unavatar -e NODE_ENV=staging -p 3000:3000 --rm unavatar",
    "dev:docs": "concurrently \"npm run dev:docs:server\" \"npm run dev:docs:src\"",
    "dev:docs:server": "browser-sync start public --server public --files \"index.html, README.md, public/**/*.(css|js)\"",
    "dev:docs:src": "gulp",
    "lint": "standard-markdown && standard",
    "postrelease": "npm run release:tags && npm run release:github",
    "pretest": "npm run lint",
    "pretty": "prettier-standard index.js {core,test,bin}/**/*.js --single-quote",
    "release": "standard-version -a",
    "release:github": "github-generate-release",
    "release:tags": "git push --follow-tags origin HEAD:master",
    "test": "ava"
  },
  "private": true,
  "license": "MIT",
  "ava": {
    "workerThreads": false,
    "serial": true,
    "files": [
      "test/**/*.js",
      "!test/helpers.js"
    ],
    "timeout": "1m"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ],
    "rules": {
      "body-max-line-length": [
        0
      ]
    }
  },
  "nano-staged": {
    "*.js": [
      "prettier-standard",
      "standard --fix"
    ],
    "*.md": [
      "standard-markdown"
    ],
    "package.json": [
      "finepack"
    ]
  },
  "pnpm": {
    "neverBuiltDependencies": []
  },
  "simple-git-hooks": {
    "commit-msg": "npx commitlint --edit",
    "pre-commit": "npx nano-staged"
  }
}
